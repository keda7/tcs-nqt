1.check if aray is sorted 
def is_sorted(arr, index=0):
    if index == len(arr) - 1:  # Base case: If we reach the last element, it's sorted
        return True
    if arr[index] > arr[index + 1]:  # If current element is greater than the next, not sorted
        return False
    return is_sorted(arr, index + 1)  # Recursive call for the next element

# Example Usage:
arr = list(map(int, input("Enter space-separated numbers: ").split()))
print("Sorted" if is_sorted(arr) else "Not Sorted")
2.sum in array:
def sum_array(arr, index=0):
    if index == len(arr):  # Base case: If index reaches the length of the array, return 0
        return 0
    return arr[index] + sum_array(arr, index + 1)  # Sum current element + recursion for next

# Example Usage:
arr = list(map(int, input("Enter space-separated numbers: ").split()))
print("Sum of array:", sum_array(arr))
3.first element of an index 
def first_index(arr, target, index=0):
    if index == len(arr):  # Base case: If we reach the end, return -1 (not found)
        return -1
    if arr[index] == target:  # If the element is found, return the index
        return index
    return first_index(arr, target, index + 1)  # Recursive call with next index

# Example Usage:
arr = [4, 2, 1, 5, 3, 1, 7]
target = 1
print(first_index(arr, target))  # Output: 2

target = 7
print(first_index(arr, target))  # Output: 6

target = 9
print(first_index(arr, target))  # Output: -1 (not found)
4.Print all Index of Element using Recursion
def find_indices(arr, element,index=0):
    """
    Function to find all indices of a given element in an array using recursion.
    
    Parameters:
    arr (list of int): The array to search through.
    element (int): The element to find.
    
    Returns:
    list of int: A list containing all indices of the element in the array.
    """
    # Your code here
    if index == len(arr):
        return []
    indices = find_indices(arr,element,index+1)
    if arr[index] == element:
        return [index] + indices
    return indices 
